// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: sms_template.sql

package db

import (
	"context"
	"database/sql"
)

const createSmsTemplate = `-- name: CreateSmsTemplate :one
INSERT INTO sms_templates (
    company_id,
    branch_id,
    name,
    subject,
    content,
    subscription_type_id,
    sms_template_category_id,
    created_by,
    sms_template_type_id,
    activity_id,
    is_edited
) VALUES (
          $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11
) RETURNING sms_template_id, company_id, branch_id, name, subject, content, subscription_type_id, sms_template_category_id, created_by, sms_template_type_id, activity_id, is_edited, created_at, updated_at, deleted_at
`

type CreateSmsTemplateParams struct {
	CompanyID             sql.NullInt32  `json:"company_id"`
	BranchID              sql.NullInt32  `json:"branch_id"`
	Name                  sql.NullString `json:"name"`
	Subject               sql.NullString `json:"subject"`
	Content               sql.NullString `json:"content"`
	SubscriptionTypeID    sql.NullInt32  `json:"subscription_type_id"`
	SmsTemplateCategoryID sql.NullInt32  `json:"sms_template_category_id"`
	CreatedBy             sql.NullInt32  `json:"created_by"`
	SmsTemplateTypeID     sql.NullInt32  `json:"sms_template_type_id"`
	ActivityID            sql.NullInt32  `json:"activity_id"`
	IsEdited              sql.NullBool   `json:"is_edited"`
}

func (q *Queries) CreateSmsTemplate(ctx context.Context, arg CreateSmsTemplateParams) (SmsTemplate, error) {
	row := q.db.QueryRowContext(ctx, createSmsTemplate,
		arg.CompanyID,
		arg.BranchID,
		arg.Name,
		arg.Subject,
		arg.Content,
		arg.SubscriptionTypeID,
		arg.SmsTemplateCategoryID,
		arg.CreatedBy,
		arg.SmsTemplateTypeID,
		arg.ActivityID,
		arg.IsEdited,
	)
	var i SmsTemplate
	err := row.Scan(
		&i.SmsTemplateID,
		&i.CompanyID,
		&i.BranchID,
		&i.Name,
		&i.Subject,
		&i.Content,
		&i.SubscriptionTypeID,
		&i.SmsTemplateCategoryID,
		&i.CreatedBy,
		&i.SmsTemplateTypeID,
		&i.ActivityID,
		&i.IsEdited,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
