// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: sms_template_category.sql

package db

import (
	"context"
	"database/sql"
	"github.com/yemrealtanay/sms_templates/db/models"
)

const createSmsTemplateCategory = `-- name: CreateSmsTemplateCategory :one
INSERT INTO sms_template_categories (company_id,
                                branch_id,
                                name,
                                description,
                                created_by)
VALUES ($1, $2, $3, $4, $5)
RETURNING sms_template_category_id, company_id, branch_id, name, description, created_by, created_at, updated_at, deleted_at
`

type CreateSmsTemplateCategoryParams struct {
	CompanyID   int32  `json:"company_id"`
	BranchID    int32  `json:"branch_id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	CreatedBy   int32  `json:"created_by"`
}

func (q *Queries) CreateSmsTemplateCategory(ctx context.Context, arg CreateSmsTemplateCategoryParams) (models.SmsTemplateCategory, error) {
	row := q.db.QueryRowContext(ctx, createSmsTemplateCategory,
		arg.CompanyID,
		arg.BranchID,
		arg.Name,
		arg.Description,
		arg.CreatedBy,
	)
	var i models.SmsTemplateCategory
	err := row.Scan(
		&i.SmsTemplateCategoryID,
		&i.CompanyID,
		&i.BranchID,
		&i.Name,
		&i.Description,
		&i.CreatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const deleteSmsTemplateCategory = `-- name: DeleteSmsTemplateCategory :exec
DELETE FROM sms_template_categories WHERE sms_template_category_id = $1
`

func (q *Queries) DeleteSmsTemplateCategory(ctx context.Context, smsTemplateCategoryID int32) error {
	_, err := q.db.ExecContext(ctx, deleteSmsTemplateCategory, smsTemplateCategoryID)
	return err
}

const updateSmsTemplateCategory = `-- name: UpdateSmsTemplateCategory :exec
UPDATE sms_template_categories SET name = $1, description = $2, company_id = $3, branch_id = $4
WHERE sms_template_category_id = $5
`

type UpdateSmsTemplateCategoryParams struct {
	Name                  sql.NullString `json:"name"`
	Description           sql.NullString `json:"description"`
	CompanyID             sql.NullInt32  `json:"company_id"`
	BranchID              sql.NullInt32  `json:"branch_id"`
	SmsTemplateCategoryID int32          `json:"sms_template_category_id"`
}

func (q *Queries) UpdateSmsTemplateCategory(ctx context.Context, arg UpdateSmsTemplateCategoryParams) error {
	_, err := q.db.ExecContext(ctx, updateSmsTemplateCategory,
		arg.Name,
		arg.Description,
		arg.CompanyID,
		arg.BranchID,
		arg.SmsTemplateCategoryID,
	)
	return err
}
